


ARM Macro Assembler    Page 1 


    1 00000000         ;LR_3
    2 00000000                 area             stack, noinit, readwrite
    3 00000000                 space            0x400
    4 00000400         stack_top
    5 00000400                 area             reset, data, readonly
    6 00000000 00000000        dcd              stack_top
    7 00000004 00000000        dcd              start
    8 00000008                 area             program,code,readonly
    9 00000000                 entry
   10 00000000         start
   11 00000000 F000 F805       bl               pp1         ;
   12 00000004 F000 F83B       bl               pp2         ;
   13 00000008 F000 F83D 
                       m       bl               pp3         ;
   14 0000000C         ; bl  pp4  ;
   15 0000000C         ; bl  pp5  ;
   16 0000000C E7FC            b                m           ;
   17 0000000E         pp1
   18 0000000E 4820            ldr              r0, =0x40020000 ;BazAdr RST_CLK
                                                            
   19 00000010 4920            ldr              r1, =0x40070000 ;BazAdr Tim1
   20 00000012 4A21            ldr              r2, =0x40078000 ;BazAdr Tim2
   21 00000014 4B21            ldr              r3, =0x400a8000 ;BazAdr Port_A 
                                                            
   22 00000016 4C22            ldr              r4, =0x400b8000 ;BazAdr  Port_C
                                                            
   23 00000018 4D22            ldr              r5,=0x400c8000 ;BazAdr Port_E 
   24 0000001A 4E23            ldr              r6,=0x40090000 ;BazAdr DAC
   25 0000001C 4F23            ldr              r7,=0x0aa4c010 ; per_clock
   26 0000001E 61C7            str              r7, [r0, #0x1c] ;
   27 00000020 F04F 7740       ldr              r7, =0x03000000 ;Tim-1-2-Clk
   28 00000024 6247            str              r7, [r0, #0x24]
   29 00000026 F04F 07FF       mov              r7, #0xff   ; _port_A_
   30 0000002A 605F            str              r7, [r3,#0x04] ;OE 
   31 0000002C 60DF            str              r7, [r3,#0x0c] ;Analog 
   32 0000002E F245 5755       mov              r7, #0x5555 ; 
   33 00000032 619F            str              r7, [r3,#0x18] ;PWR
   34 00000034 F04F 0703       mov              r7, #0x03   ; _Port C_  
   35 00000038 6065            str              r5, [r4,#0x04] ;OE
   36 0000003A F04F 0707       mov              r7, #0x07   ;
   37 0000003E 60E7            str              r7, [r4,#0x0c] ;Analog 
   38 00000040 F04F 0705       mov              r7, #0x05   ; 
   39 00000044 61A7            str              r7, [r4,#0x18] ;PWR 
   40 00000046 F04F 0701       mov              r7, #0x01   ;   _Port E_
   41 0000004A 606F            str              r7, [r5,#0x04] ;OE
   42 0000004C F240 07FE       movw             r7, #0xfe   ; 
   43 00000050 60EF            str              r7, [r5,#0x0c] ;Analog 
   44 00000052 F245 5754       movw             r7, #0x5554 ; 
   45 00000056 61AF            str              r7, [r5,#0x18] ;PWR
   46 00000058 F04F 0708       mov              r7, #0x08   ; _DAC_
   47 0000005C 6037            str              r7, [r6]    ; 
   48 0000005E 4F13            ldr              r7,=0x0aa4c010 ; per_clock
   49 00000060 61C7            str              r7, [r0, #0x1c] ; ldr  r7, =0x0
                                                            3000000;Tim-1-2-Clk
                                                            
   50 00000062 6247            str              r7, [r0, #0x24]
   51 00000064         
   52 00000064 F04F 070A       mov              r7,  # 0xA  ;PSG _Tim1, Tim2_
   53 00000068 604F            str              r7, [r1, #0x04] ; 



ARM Macro Assembler    Page 2 


   54 0000006A 6057            str              r7, [r2, #0x04] ; 
   55 0000006C F240 0764       movw             r7,  #100   ;ARR
   56 00000070 608F            str              r7, [r1, #0x08] ; 
   57 00000072 6097            str              r7, [r2, #0x08] ; 
   58 00000074 F04F 0701       mov              r7, #0x01   ;CNTRL
   59 00000078 60CF            str              r7, [r1, #0x0c] ;
   60 0000007A 60D7            str              r7, [r2, #0x0c] ;
   61 0000007C         ; movw  r7, #25  ;ch1_CCR 
   62 0000007C         ; str  r7, [r1, #0x10];
   63 0000007C         ;  str  r7, [r2, #0x10];
   64 0000007C         ; movw  r7, #15  ;ch2_CCR 
   65 0000007C         ; str  r7, [r1, #0x14];
   66 0000007C         ;  str  r7, [r2, #0x14];
   67 0000007C         ; mov  r7, # 0x0c00 ;CH1_CNTRL
   68 0000007C         ; str  r7,[r1, #0x20] ;
   69 0000007C         ; str  r7,[r2, #0x20] ;
   70 0000007C         ; mov  r7, # 0x0c00 ;CH2_CNTRL
   71 0000007C         ; str  r7,[r1, #0x24] ;
   72 0000007C         ; str  r7,[r2, #0x24] ;
   73 0000007C         ; movw  r7, # 0x909 ;CH1_CNTRL1;  
   74 0000007C         ; str  r7, [r1, #0x30];  
   75 0000007C         ; str  r7, [r2, #0x30]; 
   76 0000007C         ; movw r0, #0x909  ;CH2_CNTRL1;
   77 0000007C         ; str  r0, [r1, #0x34];
   78 0000007C         ; str  r0, [r2, #0x34];*/
   79 0000007C 4770            bx               lr
   80 0000007E         pp2
   81 0000007E         ; movw r7, #0x03b8
   82 0000007E F04F 0700       mov              r7, #0
   83 00000082 609F            str              r7, [r3,#0x08] ; _FUNC
   84 00000084 4770            bx               lr
   85 00000086         pp3
   86 00000086 F8D1 A000       ldr              r10, [r1]
   87 0000008A F8C3 A000       str              r10, [r3]
   88 0000008E         ; add r11, #0x01 
   89 0000008E         ; and r12, r11, 0xff
   90 0000008E         ; add r12,  0x0; N(t)
   91 0000008E         ; str r12,[r3]   
   92 0000008E         ; str r12,[r6,#0x08]
   93 0000008E         ; str r12,[r1,#0x05]
   94 0000008E         ; str r11, [r2,#0x10]
   95 0000008E         ; mov r9, #0xfff
   96 0000008E         ;tau subs r9, #1
   97 0000008E         ; bpl tau   */
   98 0000008E 4770            bx               lr
   99 00000090                 END
              40020000 
              40070000 
              40078000 
              400A8000 
              400B8000 
              400C8000 
              40090000 
              0AA4C010 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\ex1.d -o.\objects\ex1.o -I.\RTE\_Target_1 -IC:\Keil_v5\A
RM\PACK\Keil\MDR1986BExx\1.4\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\inc -I
C:\Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION
_VERSION SETA 526" --predefine="USE_MDR32F9Q2_Rev1 SETA 1" --list=.\listings\ex



ARM Macro Assembler    Page 3 


1.lst ex1.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

stack 00000000

Symbol: stack
   Definitions
      At line 2 in file ex1.s
   Uses
      None
Comment: stack unused
stack_top 00000400

Symbol: stack_top
   Definitions
      At line 4 in file ex1.s
   Uses
      At line 6 in file ex1.s
Comment: stack_top used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

reset 00000000

Symbol: reset
   Definitions
      At line 5 in file ex1.s
   Uses
      None
Comment: reset unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

m 00000008

Symbol: m
   Definitions
      At line 13 in file ex1.s
   Uses
      At line 16 in file ex1.s
Comment: m used once
pp1 0000000E

Symbol: pp1
   Definitions
      At line 17 in file ex1.s
   Uses
      At line 11 in file ex1.s
Comment: pp1 used once
pp2 0000007E

Symbol: pp2
   Definitions
      At line 80 in file ex1.s
   Uses
      At line 12 in file ex1.s
Comment: pp2 used once
pp3 00000086

Symbol: pp3
   Definitions
      At line 85 in file ex1.s
   Uses
      At line 13 in file ex1.s
Comment: pp3 used once
program 00000000

Symbol: program
   Definitions
      At line 8 in file ex1.s
   Uses
      None
Comment: program unused
start 00000000

Symbol: start
   Definitions
      At line 10 in file ex1.s
   Uses
      At line 7 in file ex1.s
Comment: start used once
6 symbols
344 symbols in table
